# models.py in your Django app

from django.db import models
from django.contrib.auth.models import User

class Meeting(models.Model):
    therapist = models.ForeignKey(User, on_delete=models.CASCADE)
    patient = models.ForeignKey(Patient, on_delete=models.CASCADE)
    date_and_time = models.DateTimeField()
    location = models.CharField(max_length=255, blank=True, null=True)
    notes = models.TextField(blank=True, null=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return f"Meeting with {self.patient} at {self.date_and_time}"

///////////////////////////////////////
# models.py in your Django app

from django.db import models
from django.contrib.auth.models import User

class Appointment(models.Model):
    therapist = models.ForeignKey(User, on_delete=models.CASCADE)
    patient = models.ForeignKey(Patient, on_delete=models.CASCADE)
    recurring_frequency = models.CharField(max_length=50)  # e.g., "Weekly", "Bi-weekly", "Monthly"
    day_of_week = models.CharField(max_length=10, blank=True, null=True)
    time_of_day = models.TimeField()
    location = models.CharField(max_length=255, blank=True, null=True)
    notes = models.TextField(blank=True, null=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return f"Appointment with {self.patient} ({self.recurring_frequency})"


///////////////

# models.py in your Django app

from django.db import models
from django.contrib.auth.models import User

class TherapistProfile(models.Model):
    user = models.OneToOneField(User, on_delete=models.CASCADE)
    bio = models.TextField(blank=True, null=True)
    specialization = models.CharField(max_length=100, blank=True, null=True)
    # Add more fields as needed for therapist information
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    def __str__(self):
        return f"Profile of {self.user.username}"
